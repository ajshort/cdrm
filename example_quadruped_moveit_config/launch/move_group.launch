<?xml version="1.0"?>
<launch>
  <include file="$(find example_quadruped_moveit_config)/launch/planning_context.launch" />

  <arg name="debug" default="false" />
  <arg name="launch_prefix" unless="$(arg debug)" value="" />
  <arg name="launch_prefix" if="$(arg debug)"
	     value="gdb -x $(find example_quadruped_moveit_config)/launch/gdb_settings.gdb --ex run --args" />

  <arg name="info" default="$(arg debug)" />
  <arg name="command_args" unless="$(arg info)" value="" />
  <arg name="command_args" if="$(arg info)" value="--debug" />

  <arg name="allow_trajectory_execution" default="true" />
  <arg name="fake_execution" default="false" />
  <arg name="max_safe_path_cost" default="1" />
  <arg name="jiggle_fraction" default="0.05" />
  <arg name="publish_monitored_planning_scene" default="true" />

  <include ns="move_group" file="$(find example_quadruped_moveit_config)/launch/planning_pipeline.launch.xml">
    <arg name="pipeline" value="cdrm_legged" />
  </include>

  <include ns="move_group" file="$(find example_quadruped_moveit_config)/launch/trajectory_execution.launch.xml"
           if="$(arg allow_trajectory_execution)">
    <arg name="moveit_manage_controllers" value="true" />
    <arg name="moveit_controller_manager" value="example_quadruped" unless="$(arg fake_execution)" />
    <arg name="moveit_controller_manager" value="fake" if="$(arg fake_execution)" />
  </include>

  <include ns="move_group" file="$(find example_quadruped_moveit_config)/launch/sensor_manager.launch.xml"
           if="$(arg allow_trajectory_execution)">
    <arg name="moveit_sensor_manager" value="example_quadruped" />
  </include>

  <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group"
        output="screen" args="$(arg command_args)">
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
    <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
                                      move_group/MoveGroupExecuteTrajectoryAction
                                      move_group/MoveGroupKinematicsService
                                      move_group/MoveGroupMoveAction
                                      move_group/MoveGroupPickPlaceAction
                                      move_group/MoveGroupPlanService
                                      move_group/MoveGroupQueryPlannersService
                                      move_group/MoveGroupStateValidationService
                                      move_group/MoveGroupGetPlanningSceneService
                                      move_group/ApplyPlanningSceneService
                                      move_group/ClearOctomapService" />

    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
  </node>
</launch>
